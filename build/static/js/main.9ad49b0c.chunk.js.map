{"version":3,"sources":["Components/Question/img/defaultBird.jpg","assets/audio/win.mp3","assets/audio/error.mp3","assets/audio/gameOver.mp3","Components/Header/Header.jsx","Components/ListMenu/ListMenu.jsx","Components/Question/Question.jsx","controller/birdsData.js","Components/Answer/Answer.jsx","Components/AnswersBlock/AnswersBlock.jsx","Components/Description/Description.jsx","Components/NextQuestion/NextQuestion.jsx","Components/GameOver/GameOver.jsx","App.js","controller/random.js","serviceWorker.js","index.js"],"names":["module","exports","props","score","className","Typography","variant","stage","map","item","idx","itemClass","key","nextQuestion","questionData","name","showName","showImg","sound","style","display","justifyContent","alignItems","src","defaultBird","alt","padding","List","ListItem","id","controls","backgroundColor","width","birdsData","species","description","image","audio","checkAnswer","next","checkedAnswers","color","spanRef","useRef","length","current","onClick","ref","AnswerBlock","this","answerOptions","Answer","Component","birdData","autoPlay","showJumpControls","customAdditionalControls","nextLvl","createNewGame","congratsText","margin","borderRadius","align","App","startLvl","lvl","console","log","clear","random","from","to","Math","floor","Random","setState","secretBird","img","state","checked","push","filter","v","i","a","indexOf","clicked","playSound","document","querySelector","pause","gameOver","Audio","gameOverSound","play","bool","winSound","errSound","correctAnswer","Header","ListMenu","GameOver","Question","AnswersBlock","Description","NextQuestion","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,uYCI5B,WAACC,GACd,IAAMC,EAAQD,EAAMC,MACpB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,SACf,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,UACUH,KCLD,G,MAAA,SAACD,GACd,IAAMK,EAAQL,EAAMK,MAGpB,OACE,wBAAIH,UAAU,QAHE,CAAC,mDAAY,+DAAc,sEAAgB,sEAAgB,sEAAgB,6EAIhFI,KAAI,SAACC,EAAMC,GACpB,IAAMC,EAAaJ,IAAUG,EAAO,mBAAqB,YACzD,OACE,wBAAIN,UAAWO,EAAWC,IAAKH,GAC7B,kBAACJ,EAAA,EAAD,KACII,U,0DCTC,WAACP,GAAW,IACjBW,EAA8BX,EAA9BW,aAAcC,EAAgBZ,EAAhBY,aAEdC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,QAASC,EAAUJ,EAAVI,MAOjC,OACE,yBAAKd,UAAU,kBACb,yBAAKe,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,WAClE,yBAAKC,IAAMV,EAAgBI,EAAUO,IAAaC,IAAI,OAAQN,MAAO,CAACO,QAAS,UAEjF,yBAAKtB,UAAU,QACb,kBAACuB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAEIf,EACE,oCACE,kBAACR,EAAA,EAAD,CAAYC,QAAQ,MAAMU,IAG5B,oCACE,kBAACX,EAAA,EAAD,CAAYC,QAAQ,MAAMS,KAKlC,kBAACa,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,GAAK,gBACLN,IAAKL,EACLY,UAAQ,EACRX,MA9BE,CACZY,gBAAiB,UACjBC,MAAO,eCiSIC,EA/SG,CAChB,CACE,CACEJ,GAAI,EACJd,KAAM,iCACNmB,QAAS,eACTC,YAAa,4mCACbC,MAAO,mEACPC,MAAO,2GAET,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,YACTC,YAAa,2kCACbC,MAAO,iEACPC,MAAO,2FAET,CACER,GAAI,EACJd,KAAM,mDACNmB,QAAS,mBACTC,YAAa,0lCACbC,MAAO,mEACPC,MAAO,iKAET,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,wBACTC,YAAa,ktCACbC,MAAO,iEACPC,MAAO,sIAET,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,kBACTC,YAAa,okCACbC,MAAO,iEACPC,MAAO,oLAET,CACER,GAAI,EACJd,KAAM,uCACNmB,QAAS,cACTC,YAAa,suCACbC,MAAO,mEACPC,MAAO,kJAGX,CACE,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,oBACTC,YAAa,ikCACbC,MAAO,mEACPC,MAAO,kFAET,CACER,GAAI,EACJd,KAAM,2BACNmB,QAAS,oBACTC,YAAa,+sCACbC,MAAO,mEACPC,MAAO,2GAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,mBACTC,YAAa,wsCACbC,MAAO,mEACPC,MAAO,6GAET,CACER,GAAI,EACJd,KAAM,sEACNmB,QAAS,oBACTC,YAAa,gmCACbC,MAAO,iEACPC,MAAO,4FAET,CACER,GAAI,EACJd,KAAM,uCACNmB,QAAS,YACTC,YAAa,2rCACbC,MAAO,mEACPC,MAAO,qGAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,sBACTC,YAAa,6uCACbC,MAAO,mEACPC,MAAO,sJAGX,CACE,CACER,GAAI,EACJd,KAAM,uCACNmB,QAAS,oBACTC,YAAa,2sCACbC,MAAO,iEACPC,MAAO,uGAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,oBACTC,YAAa,6tCACbC,MAAO,mEACPC,MAAO,qGAET,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,sBACTC,YAAa,6xCACbC,MAAO,iEACPC,MAAO,oIAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,oBACTC,YAAa,4sCACbC,MAAO,iEACPC,MAAO,kIAET,CACER,GAAI,EACJd,KAAM,2BACNmB,QAAS,cACTC,YAAa,itCACbC,MAAO,mEACPC,MAAO,sFAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,YACTC,YAAa,soCACbC,MAAO,mEACPC,MAAO,yEAGX,CACE,CACER,GAAI,EACJd,KAAM,yDACNmB,QAAS,kBACTC,YAAa,snCACbC,MAAO,iEACPC,MAAO,oJAET,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,oBACTC,YAAa,6jCACbC,MAAO,gEACPC,MAAO,8GAET,CACER,GAAI,EACJd,KAAM,6CACNmB,QAAS,mBACTC,YAAa,wwCACbC,MAAO,iEACPC,MAAO,0FAET,CACER,GAAI,EACJd,KAAM,uCACNmB,QAAS,kBACTC,YAAa,gyCACbC,MAAO,iEACPC,MAAO,0FAET,CACER,GAAI,EACJd,KAAM,+DACNmB,QAAS,sBACTC,YAAa,0vCACbC,MAAO,mEACPC,MAAO,0GAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,sBACTC,YAAa,uqCACbC,MAAO,mEACPC,MAAO,oKAGX,CACE,CACER,GAAI,EACJd,KAAM,2BACNmB,QAAS,oBACTC,YAAa,uhCACbC,MAAO,kEACPC,MAAO,0FAET,CACER,GAAI,EACJd,KAAM,uCACNmB,QAAS,iBACTC,YAAa,goCACbC,MAAO,mEACPC,MAAO,uIAET,CACER,GAAI,EACJd,KAAM,2BACNmB,QAAS,iBACTC,YAAa,2hCACbC,MAAO,gEACPC,MAAO,6FAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,mBACTC,YAAa,upCACbC,MAAO,mEACPC,MAAO,sFAET,CACER,GAAI,EACJd,KAAM,uCACNmB,QAAS,qBACTC,YAAa,+sCACbC,MAAO,mEACPC,MAAO,qFAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,YACTC,YAAa,soCACbC,MAAO,iEACPC,MAAO,0FAGX,CACE,CACER,GAAI,EACJd,KAAM,yDACNmB,QAAS,mBACTC,YAAa,moCACbC,MAAO,gEACPC,MAAO,oGAET,CACER,GAAI,EACJd,KAAM,iCACNmB,QAAS,gBACTC,YAAa,woCACbC,MAAO,+DACPC,MAAO,+HAET,CACER,GAAI,EACJd,KAAM,qEACNmB,QAAS,mBACTC,YAAa,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","file":"static/js/main.9ad49b0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultBird.06a46938.jpg\";","module.exports = __webpack_public_path__ + \"static/media/win.0022a5bd.mp3\";","module.exports = __webpack_public_path__ + \"static/media/error.bffd1a6f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/gameOver.3d051faa.mp3\";","import React from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default (props) => {\n  const score = props.score\n  return (\n    <div className=\"header\">\n      <div className=\"logo\"></div>\n      <Typography variant=\"h5\">\n        Score: {score}\n      </Typography>\n        \n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport { Typography} from \"@material-ui/core\";\n\n\nexport default (props) => {\n  const stage = props.stage;\n  const menuTypes = [\"Разминка\", \"Воробьиные\", \"Лесные птицы\", \"Певчие птицы\", \"Хищные птицы\", \"Морские птицы\"];\n\n  return (\n    <ul className=\"list\">\n    {menuTypes.map((item, idx) => {\n      const itemClass = (stage === idx) ? 'list-item-active' : 'list-item';\n      return (\n        <li className={itemClass} key={item}>\n          <Typography>\n             {item}\n          </Typography>\n        </li>\n      );\n    })}\n  </ul>\n  )\n};\n","import React from \"react\";\nimport \"./style.css\";\nimport { Typography, List, ListItem } from \"@material-ui/core\";\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport defaultBird from \"./img/defaultBird.jpg\";\n\nexport default (props) => {\n  const { nextQuestion, questionData} = props;\n\n  const { name, showName, showImg, sound } = questionData;\n  \n  const style = {\n    backgroundColor: \"#303030\",\n    width: \"100%\"\n  };\n  \n  return (\n    <div className=\"question-block\">\n      <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n        <img src={ nextQuestion ?  showImg : defaultBird} alt=\"bird\"  style={{padding: \"0 0\"}}/>\n      </div>\n      <div className=\"info\">\n        <List>\n          <ListItem>\n            {\n              nextQuestion ?\n                <>\n                  <Typography variant=\"h3\">{showName}</Typography>\n                </>          \n              :\n                <>\n                  <Typography variant=\"h3\">{name}</Typography>\n                </>\n            }\n            \n          </ListItem>\n          <ListItem>\n            <ReactAudioPlayer\n              id = \"questionAudio\"\n              src={sound}\n              controls\n              style={style}\n            />\n          </ListItem>\n        </List>\n      </div>\n    </div>\n  );\n};\n","const birdsData = [\n  [       \n    {\n      id: 1,\n      name: 'Ворон',\n      species: 'Corvus corax',\n      description: 'Ворон – крупная птица. Длина тела достигает 70 сантиметров, размах крыльев – до полутора метров. Вороны населяют окрестности Тауэра. В Англии бытует поверье, что в день, когда черные вороны улетят от Тауэра, монархия рухнет.',\n      image: 'https://live.staticflickr.com//65535//49298804222_474cfe8682.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/XIQVMQVUPP/XC518684-Grands%20corbeaux%2009012020%20Suzon.mp3'\n    },\n    {\n      id: 2,\n      name: 'Журавль',\n      species: 'Grus grus',\n      description: 'Звуки, издаваемые журавлем, похожи на звонкое «кур-лы – кур-лы». Журавли чаще всего поют дуэтом – одна птица начинает запев со слога «кур», а вторая подхватывает «лы». Если птица поёт одна, то она издает только звук «кур».',\n      image: 'https://live.staticflickr.com/65535/49221158846_b0b69a58f1.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC512582-190604_1087_Grus_tok.mp3'\n    },\n    {\n      id: 3,\n      name: 'Ласточка',\n      species: 'Delichon urbicum',\n      description: 'Для ласточек характерно негромкое щебетание. Песни ласточек не смолкают на протяжении всего лета. Исследователи различают у птиц до 6 щебечущих звуков: «вит», «ви-вит», «чивит», «чиривит» и т.п. Ласточки любят петь дуэтом.',\n      image: 'https://live.staticflickr.com//65535//48539007512_5029d2a9a0.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489247-190724_09.10h_huiszwaluw_biesbosch_amaliahoeve_roep_100%2Bex_fouragerend_gezien_%20%282%29.mp3'\n    },\n    {\n      id: 4,\n      name: 'Козодой',\n      species: 'Caprimulgus europaeus',\n      description: 'Козодой – неприметная птица, известная благодаря своему голосу. Песня козодоя звучит как монотонная трель похожая на тарахтение мотоцикла. Такое дребезжание слышно от заката до рассвета, его тональность, частота и громкость изменяются. ',\n      image: 'https://live.staticflickr.com/65535/48456345286_dbc8530027.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC486956-190623_22.37h_nachtzwaluw_rechte%20heide_zang_ad%20_2ex_gezien_.mp3'\n    },\n    {\n      id: 5,\n      name: 'Кукушка',\n      species: 'Cuculus canorus',\n      description: 'Кукушку назвали так из-за особенностей ее песен. Звонкое «ку-ку» не спутать ни с какой другой птицей. Кукушки не строят гнезда, их потомство выращивают другие виды пернатых, которым кукушки подбрасывают свои яйца.',\n      image: 'https://live.staticflickr.com/65535/48377838151_e15f430ec1.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501461-190616_08.13h_koekoek_brabantse%20biesbosch%20jantjesplaat_roep_1%20ex_ad%20m_ter%20plaatse%20zingend_gezien_.mp3'\n    },\n    {\n      id: 6,\n      name: 'Синица',\n      species: 'Parus major',\n      description: 'В щебетании синиц различают более 40 различных звуковых сочетаний. Поют они практически круглый год, немного затихая только зимой. Синицы настоящие санитары леса. Одна пара синиц в период гнездования оберегает от вредителей десятки деревьев.',\n      image: 'https://live.staticflickr.com//65535//49366042493_c48c81d58d.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/RFGQDPLDEC/XC518417-Kj%C3%B8ttmeis%20XC%20Helg%C3%B8ya%20Elias%20A.%20Ryberg20200108133922_079.mp3'\n    }\n  ],\n  [\n    {\n      id: 1,\n      name: 'Воробей',\n      species: 'Passer domesticus',\n      description: 'Воробьи являются самыми известными и узнаваемыми пернатыми. Их легко узнать по пестрому оперению и задорному чириканью. Воробьи относятся к синатропному виду — они селятся поблизости к человеческому жилищу.',\n      image: 'https://live.staticflickr.com//65535//49366595303_06cf65b07e.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/CXFHOPIVAS/XC503224-191020_0134.mp3'\n    },\n    {\n      id: 2,\n      name: 'Грач',\n      species: 'Corvus frugilegus',\n      description: 'Грачи очень умные и сообразительные птицы. С помощью клюва они создают и используют простейшие орудия. У грачей развит рефлекс на звуки трактора. Услышав «тарахтение», они летят на звук – трактор пашет землю, значит, в этом месте много корма.',\n      image: 'https://live.staticflickr.com//65535//49347123322_291c86b016.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/RLRHCUIPIY/XC512540-gawron%20Suble%2019.12.19%20%2012.35.mp3'\n    },\n    {\n      id: 3,\n      name: 'Галка',\n      species: 'Coloeus monedula',\n      description: 'Слово «галка» произошло из старославянского языка и переводится как «чёрный». Этим словом часто называют воронов или других черных птиц. Латинское название галки «monedula» связывают со словами монета за любовь птицы к блестящим и ярким вещам.',\n      image: 'https://live.staticflickr.com//65535//49237149586_993cf685c5.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC510498-Coloeus%20monedula_2019.11.13_11.55_01.mp3'\n    },\n    {\n      id: 4,\n      name: 'Певчий дрозд',\n      species: 'Turdus philomelos',\n      description: 'Дрозд — лучший певец из отряда воробьиных. Песня состоит только из красивых звучных свистов и коротких трелей. Чаще всего её можно услышать в утреннее и вечернее время. Поют дрозды в течении всего периода гнездования.',\n      image: 'https://live.staticflickr.com/65535/48979125763_e2534f54bd.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513326-190704_1146_TF-Glogow.mp3'\n    },\n    {\n      id: 5,\n      name: 'Сорока',\n      species: 'Pica pica',\n      description: 'Сорока очень трудолюбивая птица. Она строит до восьми гнёзд, а потом выбирает из них самое лучшее. Вход в гнездо сорок всегда обращен на юг, чтобы в жилище было теплее. Сороки являются единственными птицами, которые узнают себя в зеркале.',\n      image: 'https://live.staticflickr.com//65535//49360363066_ff02bb6a73.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC500868-Pica%20pica2019.08.23_09.18_02.mp3'\n    },\n    {\n      id: 6,\n      name: 'Сойка',\n      species: 'Garrulus glandarius',\n      description: 'Когда сойка волнуется, хохолок на её голове взъерошивается. Птица старается создать устрашающее зрелище. Сойки умеют имитировать голоса других птиц, животных и звуки, которые создает человек. На зиму они делают большие запасы желудей и орехов.',\n      image: 'https://live.staticflickr.com//65535//49369678956_9a7465c7f4.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/TFOGOENSTQ/XC501517-191008_1590%201300.%20Eichelh%C3%A4her%20D%2C%20NW%2C%20LEV.%20Stephan%20Risch.mp3'\n    }\n  ],\n  [\n    {\n      id: 1,\n      name: 'Зяблик',\n      species: 'Fringilla coelebs',\n      description: 'В дикой природе насчитывается 450 видов зябликов. Зимой зяблики ведут стайный образ жизни. Иногда в их семьях можно увидеть воробьев. Запевают зяблики весной, с наступлением брачного периода. Их пение – это заливистые многоминутные рулады.',\n      image: 'https://live.staticflickr.com/65535/49143150817_2d3a2f6c1e.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC512407-150622_03%20zi%C4%99ba%20%282%29.mp3'\n    },\n    {\n      id: 2,\n      name: 'Клёст',\n      species: 'Loxia curvirostra',\n      description: 'Клестов называют «рождественскими» птицами. В естественных условиях они дают потомство зимой – в январе. Эти птицы утепляют свои гнезда мхом и шерстью животных, потому птенцам не холодно. В поисках шишек клесты могут улетать за 3500 км от гнезда.',\n      image: 'https://live.staticflickr.com//65535//49365470123_f2de66bb35.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/OTVUCEGYZN/XC495381-Kruisbek%20roep%20NHD%20290619.mp3'\n    },\n    {\n      id: 3,\n      name: 'Горлица',\n      species: 'Streptopelia turtur',\n      description: 'Горлица обитает в смешанных и широколиственных лесах, а также в городских парках и поселках. Птицы часто выбирают места жизни рядом с человеком и легко привыкают к людям. Благодаря мелодичному приятному пению горлиц часто разводят в домашних условиях.',\n      image: 'https://live.staticflickr.com/65535/48063004977_84252f9ceb.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC324106-Turkawka_Streptopelia_turtur_Poland_Jarek_Matusiak_2011625_07.mp3'\n    },\n    {\n      id: 4,\n      name: 'Дятел',\n      species: 'Dendrocopos major',\n      description: 'Дятел – заметная и шумная птица, часто живет рядом с человеком. С середины января до конца июня можно услышать «барабанную дробь» дятлов – трель от вибрации веток под быстрыми ударами клюва птицы. В хорошую погоду дробь слышна в радиусе 1,5 км.',\n      image: 'https://live.staticflickr.com/65535/49339376578_e933426455.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC518928-AB-017%20dzi%C4%99cio%C5%82%20du%C5%BCy%20agresja%20%282%29.mp3'\n    },\n    {\n      id: 5,\n      name: 'Удод',\n      species: 'Upupa epops',\n      description: 'Удоды предпочитают жить на открытых ландшафтах с отдельными деревьями или рощами. Наиболее удобными для птицы являются лесостепь и саванна. Удод может выбирать места жительства рядом с человеком: пастбища, виноградники, фруктовые сады.',\n      image: 'https://live.staticflickr.com//65535//49226383598_6f8be86a06.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC477326-dudek%20%282%29.mp3'\n    },\n    {\n      id: 6,\n      name: 'Стриж',\n      species: 'Apus apus',\n      description: 'Стрижа можно увидеть практически в каждом уголке планеты. Они обитают как в лесных зонах, так и на открытых местностях. Живут стрижи крупными стаями. Большие колонии этих птиц можно увидеть в городах или на прибрежных скалах.',\n      image: 'https://live.staticflickr.com//65535//48386150031_7b749df74b.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/TMUAWSDHDJ/XC511871-G.mp3'\n    }\n  ],\n  [\n    {\n      id: 1,\n      name: 'Жаворонок',\n      species: 'Alauda arvensis',\n      description: 'Жаворонки — перелетные птицы. С начала сентября они отлетают на юг. Возвращаются они в начале марта, независимо от того, сошел снег или нет. По прилету жаворонков определяли наступление весны и пору, когда пора пахать землю.',\n      image: 'https://live.staticflickr.com/65535/47105096764_f751fba568.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC462158-Skowronek_Alauda_arvensis_Poland_Jarek_Matusiak_%20-006%20skowronek%20%282%29.mp3'\n    },\n    {\n      id: 2,\n      name: 'Соловей',\n      species: 'Luscinia luscinia',\n      description: 'Соловьи поют с начала мая и до конца лета. Каждая песня соловья состоит из 12 повторяющихся элементов, которые еще называют коленами. Кроме собственных трелей, соловьи легко и хорошо перенимают пение других птиц.',\n      image: 'https://live.staticflickr.com/7605/27669397735_f3c21758f2.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/HILVWSADVL/XC513809-R07_0052%20Thrush%20Nightingale%20Snipe.mp3'\n    },\n    {\n      id: 3,\n      name: 'Скворец',\n      species: 'Sturnus vulgaris',\n      description: 'Скворцы - перелётные птицы. Синхронный перелет больших стай скворцов называется мурмурацией. Это красивое и завораживающее явление – множество птиц будто танцуют в воздухе, образуя замысловатые фигуры, которые уменьшаются и увеличиваются в небе.',\n      image: 'https://live.staticflickr.com/65535/49357593971_9509fe1d7c.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC515519-2020.01.01_17.24_01.MP3'\n    },\n    {\n      id: 4,\n      name: 'Иволга',\n      species: 'Oriolus oriolus',\n      description: 'Мелодичность голоса иволги сравнивают со звучанием флейты. Человеку сложно разглядеть иволгу, так как она обитает высоко на деревьях. Иволга не только очень красивая, но и  полезная птица. Она уничтожает ядовитых гусениц, которых не поедают другие птицы.',\n      image: 'https://live.staticflickr.com/65535/47102184004_58a93380b9.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/GYAUIPUVNM/XC491801-2019.07.07_06.28_01.mp3'\n    },\n    {\n      id: 5,\n      name: 'Свиристель',\n      species: 'Bombycilla garrulus',\n      description: 'У свиристели очень цепкие коготки, что помогает птице удерживаться на ветках и склевывать ягоды, которые труднее всего достать. В период ухаживаний самец предлагает самке ягоду или другое угощение. Если самка его принимает, то птицы создают пару.',\n      image: 'https://live.staticflickr.com//65535//49367433842_1b06da0e6b.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/ZNCDXTUOFL/XC517421-AB-004%20%282%29%20jemio%C5%82uszka.mp3'\n    },\n    {\n      id: 6,\n      name: 'Щегол',\n      species: 'Carduelis carduelis',\n      description: 'Щеглы поют красиво и мелодично. И в природе, и в неволе они щебечут почти круглый год. В пении щегла различают более 20 переливчатых трелей. Щеглы привыкают к людям, и даже могут возвратиться к хозяину после того, как их выпустили на волю',\n      image: 'https://live.staticflickr.com//65535//49366257253_db3ce48b9a.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC489265-190724_07.58h_putter_biesbosch_%20boompjes%20langs%20open%20water_zang_1ex_ad_niet%20gezien_.mp3'\n    }\n  ],\n  [\n    {\n      id: 1,\n      name: 'Орёл',\n      species: 'Aquila nipalensis',\n      description: 'В древние времена орел был символом солнца. Орлы часто парят над землей, при этом скорость их перемещения может достигать 240 км/ч. Иллюзия медленного движения происходит из-за высоты полета – более 700 метров',\n      image: 'https://live.staticflickr.com//4835//43867392960_7105d71e19.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/KTBTZAHSXF/10_Aquila_nipalensis_al02D85.mp3'\n    },\n    {\n      id: 2,\n      name: 'Коршун',\n      species: 'Milvus migrans',\n      description: 'Коршуны – крупные хищники, в высоту они достигают около полуметра, а вес взрослых особей достигает 1 кг. Крылья узкие и длинные, их размах составляет 1,5 м. Коршуны часто гнездятся большими стаями и даже образуют крупные колонии.',\n      image: 'https://live.staticflickr.com//65535//48701190276_ee2a9ed594.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/SDPCHKOHRH/XC485740-2019-06-22%20Selenga%20Milan%20brun%20cris%20de%20quemandage%203.mp3'\n    },\n    {\n      id: 3,\n      name: 'Лунь',\n      species: 'Circus cyaneus',\n      description: 'Лунь – это небольшой сокол. Питается в основном мышевидными грызунами, основа его рациона – полёвки, хомяки, мыши. Оперение луня может быть пепельно-серым. С такой птицей связано сравнение «седой, как лунь».',\n      image: 'https://live.staticflickr.com/4480/37240531151_b74619c99d.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/BLMSIUFTFU/XC513498-190709_1175_Cir.cyan-f.mp3'\n    },\n    {\n      id: 4,\n      name: 'Сокол',\n      species: 'Falco peregrinus',\n      description: 'Латинское название сокола Falco произошло от слова «серп» из-за серповидной формы крыльев. Длинные и широкие крылья позволяют соколу высоко подниматься в небо и свободно парить. Скорость полёта сокола достигает 280-320 километров в час.',\n      image: 'https://live.staticflickr.com//65535//49310710607_92a3a145a9.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC496049-Pilgrimsfalk_06.mp3'\n    },\n    {\n      id: 5,\n      name: 'Ястреб',\n      species: 'Accipiter gentilis',\n      description: 'Для всех ястребов характерны широкие и короткие крылья. Ещё один отличительный признак - белые «брови» над глазами. Славянские дружинники размещали изображение ястреба на своих знаменах, как символ отваги, мощи и безжалостности к врагам.',\n      image: 'https://live.staticflickr.com//65535//49024617331_b9d0d2c9b3.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/MMEJYLOPDO/XC512740-Duvh%C3%B6k_09.mp3'\n    },\n    {\n      id: 6,\n      name: 'Филин',\n      species: 'Bubo bubo',\n      description: 'Полет филина бесшумный, зрение очень острое. Эти особенности делают птицу непревзойденным ночным охотником. У филина нет естественных врагов, ни один зверь не охотится на взрослых птиц. А вот на птенцов нападают лисы и волки.',\n      image: 'https://live.staticflickr.com/65535/48137123012_393653c2e4.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/WNLIDKJKXT/XC518386-sense%20t%C3%ADtol.mp3'\n    }\n  ],\n  [\n    {\n      id: 1,\n      name: 'Альбатрос',\n      species: 'Diomedea exulans',\n      description: 'Альбатрос - самая крупная летающая птица в мире. Размах крыльев достигает три с половиной, вес - десять килограммов. Большую часть жизни альбатросы проводят в воздухе, покрывая над океанскими просторами огромные расстояния',\n      image: 'https://live.staticflickr.com/7557/16260253965_8e9430cb66.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/WOEAFQRMUD/XC293087-Diomedea%20exulans151120_T254.mp3'\n    },\n    {\n      id: 2,\n      name: 'Олуша',\n      species: 'Sula nebouxii',\n      description: 'Особенностью голубоногой олуши является не только насыщенный ярко-синий цвет лапок, но еще и тот факт, что они очень теплые. В то время как другие виды птиц греют кладки своим телом, голубоногая олуша делает это с помощью лапок',\n      image: 'https://live.staticflickr.com/800/40645471394_4422e69ed8.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/YHKQPPJDVP/XC411507-171217_1491%20BF%20Booby%205ft%20IDLP%201230%20mp3%20amp.mp3'\n    },    \n    {\n      id: 3,\n      name: 'Буревестник',\n      species: 'Puffinus griseus',\n      description: 'Размеры буревестниковых разные. Самые маленькие из них в длину составляют до 25 см, самые большие - до 1 м, при размахе крыльев около 2 м. Существует поверье, что появление буревестника в воздухе предвещает бурю, о чем говорит само название птицы.',\n      image: 'https://live.staticflickr.com//607//22136056020_935cb113f9.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/XQEVNREHJY/SHEARWATER%20Christmas%20Island_04_Motu_Isla%20de%20Pascua-Easter%20Island_CH_4MAR03_Alvaro%20Jaramillo.mp3'\n    },\n    {\n      id: 4,\n      name: 'Пеликан',\n      species: 'Pelecanus',\n      description: 'Пеликаны — обитатели морей и рек. Ходят они неуклюже, но хорошо летают и плавают. Питаются в основном рыбой, устраивают коллективные охоты — выстроившись полукругом хлопают по воде крыльями и клювами и вытесняют напуганную рыбу на мелководье.',\n      image: 'https://live.staticflickr.com/65535/49159147156_dcbbb5c12a.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/XAMHIHFTZG/XC331138-call1.mp3'\n    },\n    {\n      id: 5,\n      name: 'Пингвин',\n      species: 'Aptenodytes forsteri',\n      description: 'Самец императорского пингвина достигает роста 130 см, его масса может приближаться к 50 кг. Из всех современных пингвинов этот вид – самый крупный. Питание пингвина состоит из рыбы, кальмаров и криля. Охотятся птицы в океане большими группами.',\n      image: 'https://live.staticflickr.com/5202/5252413926_8e013a3efd.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/OOECIWCSWV/XC449827-LS100829%20King%20Penguin%20call%20A.mp3'\n    },\n    {\n      id: 6,\n      name: 'Чайка',\n      species: 'Larus argentatus',\n      description: 'Чайки населяют берега морей, озёр, рек, водохранилищ, болот, часто гнездятся на островах. С конца прошлого века чайки стали появляться в крупных городах, где устраивает гнёзда на крышах зданий. Все чайки ведут колониальный образ жизни.',\n      image: 'https://live.staticflickr.com/65535/48577115317_7034201dde.jpg',\n      audio: 'https://www.xeno-canto.org/sounds/uploaded/VOLIQOYWKG/XC501190-190801_06.50h_zilvermeeuw_duinen%20van%20goeree_roep_2ex_overvliegend_gezien_.mp3'\n    }\n  ]\n];\n\nexport default birdsData;","import React, { Component, useState } from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\nimport { useRef } from \"react\";\n\nexport default ({name, id, checkAnswer, next, checkedAnswers}) => {\n  let color = null;\n  let spanRef = useRef(null)\n  if (!checkedAnswers.length) {\n    if (spanRef.current) {\n      spanRef.current.style.backgroundColor = \"\"\n    }\n  }\n  return(\n    <>\n      <li \n        className=\"answer\" \n        onClick={()=>{\n          color = checkAnswer(id);\n            if (!next) {\n            if (color) {\n              if (spanRef.current) {\n                spanRef.current.style.backgroundColor = \"green\"\n              }\n            } else {\n              spanRef.current.style.backgroundColor = \"red\"\n            }\n          }\n        }}\n      >\n        <Typography variant=\"h6\">\n          <span\n            ref={spanRef}\n            className={\"answer-indicator\"}\n          />\n          {name}\n        </Typography>\n      </li>\n      </>\n  )\n\n\n};\n\n// class Answer extends Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       spanClass: \"answer-indicator \"\n//     }\n//   }\n  \n//   componentDidMount() {\n//     this.setState({spanClass: \"answer-indicator \"})\n//   }\n\n \n//   changeSpanClass = (bool) => {\n//     const changeString = (bool ? \"answer-indicator answer-indicator-true\" : \"answer-indicator answer-indicator-false\")\n//     this.setState({spanClass: changeString})\n//   } \n\n//   setDefaultColor = () => {\n//     console.log(\"setDefColor\")\n//   }\n\n//   render() {\n//     const { name, id, checkAnswer, next, checkedAnswers } = this.props;\n\n//     let color = null;\n    \n//     return (\n//       <>\n//       <li \n//         className=\"answer\" \n//         onClick={()=>{\n//           color = checkAnswer(id);\n//           if (!next) {\n//             this.changeSpanClass(color)\n//           }\n//         }}\n//       >\n//         <Typography variant=\"h6\">\n//           <span \n//             // className={this.state.spanClass}\n//           />\n//           {name}\n//         </Typography>\n//       </li>\n//       </>\n//     );\n//   }\n// }\n\n// export default Answer","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport Answer from \"../Answer/Answer\";\n\n\nclass AnswerBlock extends Component {\n  \n  render() {\n  const {answerOptions, checkAnswer, next, checkedAnswers} = this.props\n  return (\n    <div className=\"answers-block\">\n      <ul>\n        {answerOptions.map((item, idx) => {\n          return (\n              <Answer \n                key={idx}\n                next={next}\n                name={item.name} \n                id={idx}\n                checkAnswer={checkAnswer}\n                checkedAnswers={checkedAnswers}\n                />\n          )\n        })}\n        </ul>\n    </div>\n  );\n  }\n}\n\nexport default AnswerBlock;\n","import React from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\nimport ReactAudioPlayer from 'react-audio-player';\n\nexport default (props) => {\n  const {birdData, checkedAnswers} = props;\n  const {image, name, species, description, audio} = birdData;\n  const style = {\n    backgroundColor: \"#303030\",\n    display: \"block\",\n    width: \"100%\"\n  };\n\n  return (\n    <div className=\"block\">\n      { name && checkedAnswers.length ? (\n        <div>\n         <div className=\"box\">\n            <img\n              className=\"img\"\n              src={image}\n              alt=\"bird\"\n            />\n            <div className=\"info\">\n              <p className=\"name\">\n                {name}\n              </p>\n              <p className=\"species\">\n                {species}\n              </p>\n\n            </div>\n          </div>\n          <ReactAudioPlayer\n              src={audio}\n              autoPlay={false}\n              controls\n              showJumpControls={false}\n              customAdditionalControls={[]}\n              style={style}\n            />\n          <div className=\"text-wrapper\">\n            {description}\n          </div>\n        </div>\n      ) : (\n        <>\n          <Typography variant=\"h5\">Послушайте плеер.</Typography>\n          <Typography variant=\"h5\">Выберите птицу из списка</Typography>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default (props) => {\n    const {nextLvl, nextQuestion} = props;\n    return (\n        <>\n        <button onClick={nextLvl} className={nextQuestion? \"active\" : \"\"}>\n            Next Level\n        </button>\n        </>\n    )\n}","import React from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default (props) => {\n    const {score, createNewGame} = props;\n    let congratsText = \"\";\n    if (score < 30) {\n        congratsText = `Вы прошли викторину и набрали ${score} из 30 возможных баллов`\n    }\n    if (score === 30) {\n        congratsText = \"Абсолютная победа! Вы прошли викторину и набрали максимальное количество возможных баллов\"\n\n    }\n    return (\n        <div style={{backgroundColor: \"#303030\", margin: \"25px 0\", borderRadius: \"5px\"}}>\n            <Typography variant=\"h2\" align=\"center\">\n                Поздравляем!\n            </Typography>\n            <Typography variant=\"h3\" align=\"center\">\n                {congratsText}\n            </Typography>\n            <button \n                onClick={()=>{\n                    createNewGame();\n                }} \n                className={\"active\"}\n            >\n                Сыграть еще раз\n            </button>\n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./Components/Header/Header\";\nimport ListMenu from \"./Components/ListMenu/ListMenu\";\nimport Question from \"./Components/Question/Question\";\n\n\nimport birdsData from \"./controller/birdsData\"\nimport Random from \"./controller/random\"\nimport AnswersBlock from \"./Components/AnswersBlock/AnswersBlock\";\nimport Description from \"./Components/Description/Description\";\nimport NextQuestion from \"./Components/NextQuestion/NextQuestion\";\nimport GameOver from \"./Components/GameOver/GameOver\";\n\nimport winSound from \"./assets/audio/win.mp3\";\nimport errSound from \"./assets/audio/error.mp3\";\nimport gameOverSound from \"./assets/audio/gameOver.mp3\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      stage: 0,\n      secretBird: 0,\n      correctAnswer: null,\n      clicked: 0,\n      checkedAnswers: [],\n      questionData: {\n        name: \"\",\n        img: \"\",\n        sound: \"\",\n        showName: \"\",\n        showImg: \"\",\n      },\n      answerOptions: [],\n      nextQuestion: false,\n      gameOver: false\n    };\n  }\n\n  componentDidMount() {\n    this.startLvl(0);\n  }\n\n  startLvl = (lvl) => {\n    console.log(\"App -> lvl\", lvl);\n    this.clear();\n\n    const random = Random(0, 5);\n\n    this.setState({\n      secretBird: random,\n      nextQuestion: false,\n      questionData: {\n        name: \"*****\",\n        img: \"\",\n        showName: birdsData[lvl][random].name,\n        showImg: birdsData[lvl][random].image,\n        sound: birdsData[lvl][random].audio,\n        species: birdsData[lvl][random].species,\n        description: birdsData[lvl][random].species,\n      },\n      answerOptions: birdsData[lvl],\n    });\n  };\n\n  checkAnswer = (idx) => {\n    const { nextQuestion, secretBird, stage, checkedAnswers } = this.state;\n\n    let checked = checkedAnswers;\n    checked.push(idx);\n\n    checked = checked.filter((v, i, a) => a.indexOf(v) === i);\n\n    this.setState({ ...this.state, birdData: birdsData[stage][idx] });\n    this.setState({ clicked: this.state.clicked + 1, checkedAnswers: checked });\n\n    if (nextQuestion) {\n      return;\n    }\n\n    if (idx === secretBird) {\n      this.playSound(true);\n      this.setState({\n        ...this.state,\n        nextQuestion: true,\n        score: this.state.score + 6 - this.state.checkedAnswers.length,\n        clicked: 0,\n        birdData: birdsData[stage][idx],\n      });\n      const questionPlayer = document.querySelector(\".info audio\");\n      questionPlayer.pause();\n      return true;\n    } else {\n      this.playSound(false);\n\n      return false;\n    }\n  };\n\n  clear = () => {\n    this.setState({\n      checkedAnswers: [],\n      questionData: {\n        name: \"\",\n        img: \"\",\n        sound: \"\",\n        showName: \"\",\n        showImg: \"\",\n      },\n      answerOptions: [],\n      nextQuestion: false,\n    });\n  };\n\n  nextLvl = () => {\n    if (this.state.nextQuestion) {\n      if (this.state.stage !== 5) {\n        console.log(\"nextLvl\");\n        let lvl = this.state.stage + 1;\n        this.setState({ stage: lvl });\n        console.log(\"App -> nextLvl -> this.state.stage\", this.state.stage);\n        this.startLvl(lvl);\n      } else {\n        this.setState({ gameOver: true });\n        const audio = new Audio(gameOverSound);\n        audio.play(); \n      }\n    } else {\n      return\n    }\n  };\n\n  playSound = (bool) => {\n    const audio = new Audio(bool ? winSound : errSound);\n    audio.play(); \n  }\n\n  createNewGame = () => {\n    this.setState({\n      score: 0,\n      stage: 0,\n      secretBird: 0,\n      correctAnswer: null,\n      clicked: 0,\n      checkedAnswers: [],\n      questionData: {\n        name: \"\",\n        img: \"\",\n        sound: \"\",\n        showName: \"\",\n        showImg: \"\",\n      },\n      answerOptions: [],\n      nextQuestion: false,\n      gameOver: false\n    });\n    this.startLvl(0)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header score={this.state.score} />\n        <ListMenu stage={this.state.stage} />\n        { \n          !this.state.gameOver?\n            <>\n              <Question\n                nextQuestion={this.state.nextQuestion}\n                questionData={this.state.questionData}\n              />\n              <div className=\"row\">\n                <AnswersBlock\n                  answerOptions={this.state.answerOptions}\n                  checkAnswer={this.checkAnswer}\n                  next={this.state.nextQuestion}\n                  checkedAnswers={this.state.checkedAnswers}\n                />\n                <Description\n                  birdData={this.state.birdData ? this.state.birdData : {}}\n                  checkedAnswers={this.state.checkedAnswers}\n                />\n              </div>\n              <NextQuestion \n                nextLvl={this.nextLvl} \n                nextQuestion={this.state.nextQuestion}\n              />\n            </>\n          :\n            <>\n              <GameOver \n                score={this.state.score}\n                createNewGame={this.createNewGame}\n              />\n            </>\n          }       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default (from, to) => {\n  const random = from + Math.random() * (to + 1 - from);\n  return Math.floor(random);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}